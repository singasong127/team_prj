<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.team.app.infra.member.MemberMapper">

	<resultMap id="resultMapObj"
		type="com.team.app.infra.member.Member" />

	<sql id="member_val">
			seq
			, memType <!-- 회원유형 (관리자: 1 / 회원 : 0 ) -->
			, nickname
			, email
			, pwd
			, gender
			, dob
			, location
			, memDesc
			, delNy
	</sql>

	<sql id="member_db">
		FROM
		member
		WHERE 1=1
		AND nickname LIKE CONCAT('%',#{nickname},'%')
	</sql>
	
	<select id="memberOneCount" resultType="Integer">
		SELECT count(*)
		<include refid="member_db" />
	</select>
	
	
	<select id="memberList" resultMap="resultMapObj">
		SELECT usr. * FROM(
			SELECT
				<include refid="member_val" />
				<include refid="member_db" />
		) usr
		LIMIT #{rowNumToShow} OFFSET #{startRnumForMysql}
	</select>

	<select id="memberOne" resultMap="resultMapObj">
		SELECT
			<include refid="member_val" />
		FROM
			member
		WHERE 1=1
			AND seq = #{seq}
	</select>
	
	<select id="usrLogin" resultType="Member">
		SELECT
			a.seq
			, a.email
			, a.pwd
			, a.nickname
			, b.uuidName
			, b.originalName
			, b.path
		FROM
			member AS a
		LEFT JOIN uploadList AS b ON b.pseq = a.seq
		WHERE 1=1
			AND a.email = #{email}
			AND a.pwd = #{pwd}
		  AND (b.path IS NULL OR b.path LIKE CONCAT('%member%'));
	</select>
<!--아이디 중복체크 -->
<!--아이디 중복체크 -->
	<select id="idCheck" resultType="integer">
		SELECT
			COUNT(seq)
		FROM
			member
		WHERE 1=1
		  AND email = #{email}
	</select>
<!--아이디 중복체크 -->
<!--아이디 중복체크 -->



	<!--UPLOAD SELECT-->
	<!--UPLOAD SELECT-->
	<select id="selectListUpload" resultType="Upload">
		SELECT
			type
			 ,path
			 ,originalName
			 ,uuidName
			 ,ext
			 ,size
			 ,delNy
			 ,pseq
		FROM
			uploadList
		WHERE 1+1
		  AND path LIKE CONCAT('%member%')
		  AND pseq = #{seq}
	</select>
	<!--UPLOAD SELECT-->
	<!--UPLOAD SELECT-->




	<insert id="newAdminJoin">
		INSERT INTO
			member
			(
			memType
			, nickname
			, email
			, pwd
			, gender
			, dob
			, location
			, memDesc
			, delNy
			)VALUES(
				1
				, #{nickname}
				, #{email}
				, #{pwd}
				, #{gender}
				, #{dob}
				, #{location}
				, #{memDesc}
				, 0
			)
	</insert>
	
	<insert id="newMemberJoin">
		INSERT INTO
			member
			(
			memType
			, nickname
			, email
			, pwd
			, gender
			, dob
			, location
			, memDesc
			, delNy
			)VALUES(
				0
				, #{nickname}
				, #{email}
				, #{pwd}
				, #{gender}
				, #{dob}
				, #{location}
				, #{memDesc}
				, 0
			)
	</insert>

	<!-- uploadeds -->
	<!-- uploadeds -->
	<insert id="insertUploaded">
		INSERT INTO ${tableName} (
			  type
			 ,defaultNy
			 ,path
			 ,originalName
			 ,uuidName
			 ,ext
			 ,size
			 ,delNy
			 ,pseq
		) values (
			#{type}
			,#{defaultNy}
			,#{path}
			,#{originalName}
			,#{uuidName}
			,#{ext}
			,#{size}
			,0
			,#{pseq}
		 )
	</insert>
	<!-- uploadeds -->
	<!-- uploadeds -->
	
	<update id="memberUpdate">
		UPDATE member
		SET
			nickname = #{nickname}
			, pwd = #{pwd}
			, location = #{location}
			, memDesc = #{memDesc}
		WHERE 1=1
			AND seq = #{seq}
	</update>
	
	<update id="memberUelete">
		UPDATE member
		SET 
			delNy = 1
		WHERE 1=1
			AND seq = #{seq}
	</update>
	
	<delete id="memberExcute">
		DELETE FROM
			member
		WHERE 
			seq = #{seq}
	</delete>
<!--DELETE UPLOADED PROFILE IMG-->
<!--DELETE UPLOADED PROFILE IMG-->
	<delete id="deleteUpload">
		DELETE FROM uploadList
		WHERE 1=1
		  AND pseq = #{seq}
		  AND path LIKE CONCAT('%member%')
	</delete>
<!--DELETE UPLOADED PROFILE IMG-->
<!--DELETE UPLOADED PROFILE IMG-->


</mapper>